# Compute Fibonacci numbers
#
# By default, computes fib(val/8) == val/21. fib(24) is the maximum
# value that will compute correctly without overflow.
#
# To run:
#   $ ucisc examples/fib.ucisc

def stack/r1 <- copy val/0

stack.factorial(val/4) -> answer

&r1 <- copy stack.answer # Display on LEDs

pc <- copy pc/0 # halt

fun stack.factorial(n) -> result {
    stack.result <- copy stack.n

    stack.n push <- sub val/1
    var stack.n-1/0
    {
        pc <0? copy pc/break

        stack.factorial(stack.n-1) -> fact_n-1

        stack.result <- mult stack.fact_n-1

        &r3 <- copy stack.fact_n-1 pop
    }

    pc <- copy stack.return pop
}
