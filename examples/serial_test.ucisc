# Writes test values over the serial interface

def serialControl as 32
def typeOffset as 1
def flagsOffset as 1
def txOffset as 3

copy val 0 &stack
copy val serialControl &rb1

lsb rb1 typeOffset &r2 # Isolate device type in &r1
sub val 4 &r2 flags # Subtract serial device type
copy pc 0 pc !zero? # Halt: Not a serial device

write(pc str)
copy pc 0 pc

str:
"Hello World!

write:
{
    copy stack 0 &r2 pop      # Copy string pointer to r2
    copy r2 0 stack 0 push    # Copy string size to stack as remaining

    or stack 0 stack 0 flags
    copy &stack 1 &stack zero? # Pop size from stack if size zero
    copy stack 0 pc zero?     # Return if nothing left
    {
        waitForReady()
        copy &r2 1 &r2          # Increment string pointer
        copy r2 0 rb1 3         # Print character

        sub val 1 stack 0       # Subtract 1 from remaining
        copy pc loop pc !zero?
    }
    waitForReady()
    copy val 10 rb1 3         # Print newline

    copy &stack 1 &stack      # Pop size from stack
    copy stack 0 pc pop
}

waitForReady:
{
    and val 256 rb1 1 flags
    copy pc loop pc zero?

    copy stack 0 pc pop
}

