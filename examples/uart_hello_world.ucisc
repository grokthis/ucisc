# Writes test values over the serial interface

def stack/r1 <- copy val/0

# Lets define the serial device control space
def serial/r4 <- copy val/32
var serial.type/1 #LSB
var serial.flags/1 #MSB
var serial.tx/3
var serial.rx/4
var val.writeReady/256
var val.readReady/512

var stack.type/0 push <- lsb serial.type
stack.type <~ sub val/4
pc <!? copy pc/0             # Halt: Not a serial device

next:
stack.write(pc/str)
pc <- copy pc/next

str:
"Hello World!\nThis is a test of the serial output of this program.\nI want this to be some nice long text.\n\nLook at me go!! Are you ready for this to repeat?\n\n"

fun stack.write(ptr) -> result {
    def str/r2 <- copy stack.ptr pop
    var str.char/0

    {
        serial.flags <~ and val.writeReady
        pc <0? copy pc/loop     # Not ready to write another byte yet

        str.char <~ or str.char
        pc <0? copy pc/break # end of string, null

        serial.tx <- copy str.char

        &str <- add val/1
        pc <- copy pc/loop
    }

    pc <- copy stack.return pop
}
